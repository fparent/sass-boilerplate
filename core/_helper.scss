//************************************************************************************
// UTILITY
//************************************************************************************



// Cleaner approach to the popular method "text-indent: -9999px" for hidding text when
// using a background image.
// Prevent the browser form "painting" a huge container and increase perf on iPad 1
// http://nicolasgallagher.com/another-css-image-replacement-technique
// -----------------------------------------------------------------------------------
.hide-text, .ir {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}


@mixin hide-text {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}



// Flexbox styles
// -----------------------------------------------------------------------------
@mixin flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;

     -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
     -ms-flex-direction: row;
         flex-direction: row;

 -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  justify-content: space-between;

  -ms-flex-wrap: wrap;
      flex-wrap: wrap;

  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (-webkit-min-device-pixel-ratio: 2) {
    display: block;
  }
}

.flex {
  @include flex;
}



// Hide for both screenreaders and browsers:
// css-discuss.incutio.com/wiki/Screenreader_Visibility
// -----------------------------------------------------------------------------------
.hidden, .hide {
  display: none;
}


.visible, .show {
  display: block;
}


.invisible {
  visibility: hidden;
}



// Using the Clip Method, hide visually but NOT from screenreaders.
// This is a best practice for accessibility. For more information:
// http://css-tricks.com/places-its-tempting-to-use-display-none-but-dont/
// Clip Method: http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
// -----------------------------------------------------------------------------------
.visuallyhidden {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
}




// Clearfix: contain floats
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
// `contenteditable` attribute is included anywhere else in the document.
// Otherwise it causes space to appear at the top and bottom of elements
// that receive the `clearfix` class.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
// -----------------------------------------------------------------------------------
.clearfix {
    &:after {
        content:"";
        display:block;
        clear:both;
    }
}

@mixin clearfix {
    &:after {
        content:"";
        display:block;
        clear:both;
    }
}



// You can use a class="clear" to clear floating elements
// -----------------------------------------------------------------------------------
.clear, .clearer {
  clear: both;
  display: block;
}



// Reusable text alignment class
// -----------------------------------------------------------------------------------
.align-left    { text-align: left; }
.align-center  { text-align: center; }
.align-right   { text-align: right; }



// Float element to the left or right
// -----------------------------------------------------------------------------------
.right  { float: right; }
.left   { float: left;}
.center { margin-left: auto; margin-right: auto; }


// If the element floated is an image, add some spacing next to it
img.left  { margin-right: 1em; }
img.right { margin-left: 1em; }



// Generic reusable spacers
// -----------------------------------------------------------------------------------
.no-margin {
  margin: 0;
}

.no-padding {
  padding: 0;
}

.space-top      { margin-top: 2.500em; }
.space-right    { margin-right: 2.500em; }
.space-bottom   { margin-bottom: 2.500em; }
.space-left     { margin-left: 2.500em; }

.xlspace-bottom   { margin-bottom: 3.750em; }



// Sometimes some elements need to be exceptionnaly displayed differently
// -----------------------------------------------------------------------------------
.block        { display: block; }
.inline-block { display: inline-block; }



// Custom styles for the lists
// -----------------------------------------------------------------------------------
.no-bullet {
  list-style-type: none;
}



// Positions
// -----------------------------------------------------------------------------------
.top-left,
.top-right,
.bottom-left,
.bottom-right {
    position: absolute;
}


.top-left {
    top: 0;
    left: 0;
}


.top-right {
    top: 0;
    right: 0;
}


.bottom-left {
    bottom: 0;
    left: 0;
}


.bottom-right {
    bottom: 0;
    right: 0;
}



// Alignment
// -----------------------------------------------------------------------------------
.valign {
  @include vertical-align;
}

.valign-bottom {
  vertical-align: bottom;
}

.alignleft {
    float: left;
    margin-right: 18px;
    margin-bottom: 10px;
}

.alignright {
    float: right;
    margin-left: 18px;
    margin-bottom: 10px;
}



// Cursors
// -----------------------------------------------------------------------------------
.pointer {
  cursor: pointer;
}